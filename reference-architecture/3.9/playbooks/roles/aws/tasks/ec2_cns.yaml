---
- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} EC2 instances ( CNS )"
  ec2:
    assign_public_ip: no
    count_tag:
      Name: "{{ item.name }}"
    exact_count: "{{ 1 if (state is undefined or 'absent' not in state) else 0 }}"
    group: [
      "cns",
      "node"
    ]
    instance_type: "{{ item.type }}"
    image: "{{ ec2ami }}"
    instance_tags:
      Name: "{{ item.name }}"
    key_name: "{{ clusterid }}.{{ dns_domain }}"
    monitoring: no
    region: "{{ aws_region }}"
    termination_protection: no
    user_data: "{{ lookup('template', ( playbook_dir + '/roles/aws/templates/ec2_userdata.sh.j2') ) }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 100
      - device_name: /dev/xvdb
        volume_type: gp2
        volume_size: 100
      - device_name: /dev/xvdc
        volume_type: gp2
        volume_size: 100
      - device_name: /dev/xvdd
        volume_type: gp2
        volume_size: 100
        delete_on_termination: true
    vpc_subnet_id: "{{ item.subnet }}"
    wait: yes
  with_items: "\
{%- set i = 1 -%}
{%- set j = 0 -%}
{%- for k in range(0, ( ec2_count_cns if ec2_count_cns is defined else 3 ) ) -%}
    {%- set id = subnet_private.results[j].subnet.id if subnet_private is defined else '' -%}
    {
'name': 'cns{{ i }}',
'subnet': '{{ id }}',
'type': '{{ ec2_type_cns }}'
    },
    {%- if i <= ( ec2_count_cns if ec2_count_cns is defined else 3 ) -%}
        {%- set i = i + 1 -%}
    {%- endif -%}
    {%- if subnet_private is defined -%}
      {%- if j < subnet_private.results | length - 1 -%}
          {%- set j = j + 1 -%}
      {%- else -%}
          {%- set j = 0 -%}
      {%- endif -%}
    {%- endif -%}
{%- endfor -%}
    "
  retries: 3
  delay: 3
  register: ec2cns

- include_tasks: tag.yaml
  vars:
    - resource: "{{ item.tagged_instances[0].id }}"
    - tagss: "clusterid={{ clusterid }}, ami={{ ec2ami }}, kubernetes.io/cluster/{{ clusterid }}={{ clusterid }}, host-type=node, sub-host-type=cns"
  with_items: "{{ ec2cns.results }}"
  when:
    - ( state is undefined ) or ( 'absent' not in state )

- include_tasks: tag.yaml
  vars:
    - resource: "{{ item.tagged_instances[0].block_device_mapping['/dev/sda1'].volume_id }}"
    - tagss: "Name={{ item.tagged_instances[0].id }}-rootvol, clusterid={{ clusterid }}, "
  with_items: "{{ ec2cns.results }}"
  when:
    - ( state is undefined ) or ( 'absent' not in state )

- include_tasks: tag.yaml
  vars:
    - resource: "{{ item.tagged_instances[0].block_device_mapping['/dev/xvdb'].volume_id }}"
    - tagss: "Name={{ item.tagged_instances[0].id }}-xvdb, clusterid={{ clusterid }}, "
  with_items: "{{ ec2cns.results }}"
  when:
    - ( state is undefined ) or ( 'absent' not in state )
